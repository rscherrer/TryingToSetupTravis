#!/bin/bash

n_errors=0

# Avoid endls
n=`cat *.cpp | egrep "endl" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: SL.io.50: Avoid endl"
  ((++n_errors))
fi

# Catch exceptions by reference
n=`cat *.cpp | egrep "invalid_argument\s*\w*\s*\)" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: E.15: Catch exceptions from a hierarchy by reference"
  ((++n_errors))
fi

n=`cat *.cpp | egrep "out_of_range\s*\w*\s*\)" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: E.15: Catch exceptions from a hierarchy by reference"
  ((++n_errors))
fi

n=`cat *.cpp | egrep "exception\s*\w*\s*\)" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: E.15: Catch exceptions from a hierarchy by reference"
  ((++n_errors))
fi

# Exceptions should be const
n=`cat *.cpp | egrep "\(\w*(std::)?invalid_argument" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: Con.4: Use const to define objects with values that do not change after construction"
  ((++n_errors))
fi

n=`cat *.cpp | egrep "\(\w*(std::)?out_of_range" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: Con.4: Use const to define objects with values that do not change after construction"
  ((++n_errors))
fi

n=`cat *.cpp | egrep "\(\w*(std::)?exception" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: C++ Core Guidelines: Con.4: Use const to define objects with values that do not change after construction"
  ((++n_errors))
fi

# Do not use ellipsis
n=`cat *.cpp | egrep "\(\w*\.\.\.\w*\)" | wc -l`
if [ ! "$n" -eq "0" ]; then
  echo "Incorrect: F.55: Don't use va_arg arguments"
  ((++n_errors))
fi

exit $n_errors
